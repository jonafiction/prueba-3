name: Prueba 3 CI/CD

on:
  push:
    branches:
      - main
jobs:
  snyk-terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install snyk
        run: npm install -g snyk

      - name: Authenticate Snyk CLI
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Scan IaC code
        run: snyk iac test terraform/** --severity-threshold=high

  terraform:
    name: Config y deploy con terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v3

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Configurar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Inicializar Terraform
        run: terraform init

      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        run: terraform apply -auto-approve

  ecr-publish:
    name: Publicar imagen Docker en Amazon ECR
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout del c贸digo
        uses: actions/checkout@v4

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-latest
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Construir imagen Docker
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REP }}:latest .

      # CHEQUEO DE VULNERABILIDADES EN LA IMAGEN CON SNYK
      - name: Install snyk #instalaci贸n previa
        run: npm install -g snyk

      - name: Authenticate Snyk CLI #autenticaci贸n
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Escaneo docker image
        run: |
          snyk container test ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REP }}:latest --severity-threshold=high

      # SUBIDA DE IMAGEN A ECR
      - name: Publish docker image en Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REP }}:latest

      # ESCANEO DE VULNERABILIDADES EN ECR
      - name: Escanear repositorio en ECR
        run: |
          aws ecr start-image-scan \
            --repository-name ${{ vars.ECR_REP }} \
            --image-id imageTag=latest
